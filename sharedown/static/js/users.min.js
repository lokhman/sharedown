/*!
 * Sharedown
 *
 * @author  Alexander Lokhman
 * @email   alex.lokhman@gmail.com
 * @link    https://github.com/lokhman/sharedown
 */
(function(a,b){a.Sharedown.Users=new function(){var p=a.Sharedown,k=this;if("Users" in p){return p.Users}var q=b("#modal_user"),r=q.find("form"),n=b("#_login"),m=b("#_password"),o=r.find('[name="is_enabled"]'),e=r.find('[name="level"]'),h=b(".users-list"),c=b(".users-total"),l=h.find(".users-item").show().detach(),g=b(".users-token-group"),d=b(".users-token-show"),j=b(".users-token-update"),f=b(".users-token-delete"),i=h.data("api");this.loadUsers=function(){b.getJSON(i).done(function(s){if(!s.users||!Array.isArray(s.users)){return}h.empty();b.each(s.users,function(t,u){l.clone().find(".users-token").attr("title",(u.has_token?"Has":"No")+" API token").toggleClass("text-muted-2",!u.has_token).end().find(".users-feed").each(function(){if(u.has_feed){b(this).prop("href","/feed/"+u.login)}else{b(this).attr("title","Feed is disabled").addClass("text-muted-2")}}).end().find(".users-login").text(function(){if(!u.is_enabled){b(this).wrap("<s>")}return u.login}).end().find(".users-level").text(u.level).end().find(".users-storage > *").text(u.files+(u.files!==1?" files":" file")).prop("href","/web/?login="+u.login).end().find(".users-activity").html(u.activity_at||"&mdash;").end().find(".users-created").text(u.created_at).end().find("[title]").tooltip().end().attr("data-login",u.login).addClass(u.level==="SUPER"?"danger":u.level==="ADMIN"?"warning":"").appendTo(h)})}).always(function(){c.text("Total: "+b(".users-item").length)})};q.on({"show.bs.modal":function(v){var u=b(v.relatedTarget),s=u.closest("[data-login]").data("login"),t=true;if(s){g.find("a").data("href",i+"/"+s+"/token").end().show();r.prop({action:i+"/"+s,method:"PATCH"}).data("message",'User "'+s+'" details were successfully updated.');m.prop("required",false);t=false}else{r.prop({action:i,method:"POST"}).data("message","User was successfully created.");m.prop("required",true);g.hide()}p.form_dynamic(r[0],function(){q.modal("hide");k.loadUsers()},t)},"hide.bs.modal":function(){e.filter(":first").add(o).prop("checked",true);n.add(m).val("").trigger("keyup")}});h.on("click",".users-delete",function(){var s=b(this).closest(".users-item").data("login");p.modal("Delete","Do you want to delete this user?",function(){b.ajax(i+"/"+s,{type:"DELETE",global:false}).done(k.loadUsers).fail(function(){setTimeout(function(){p.modal("Error","Failed to delete the user from the system.")},500)})})});d.on("click",function(){b.getJSON(b(this).data("href")).done(function(s){p.modal("API Token",s.token?"<pre>"+s.token+"</pre>":"User does not have any API token configured.")});return false});j.on("click",function(){if(a.confirm("Do you really want to UPDATE the user's API token?")){b.post(b(this).data("href")).done(function(s){p.modal("New API Token","<p>API token was successfully updated. The new token is:</p><pre>"+s.token+"</pre>")})}return false});f.on("click",function(){if(a.confirm("Do you really want to DELETE the user's API token?")){b.ajax(b(this).data("href"),{method:"DELETE"}).done(function(){p.modal("API Token Deleted","API token was successfully deleted.")})}return false});b(this.loadUsers)}})(window,jQuery);